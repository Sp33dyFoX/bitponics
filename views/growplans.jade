extends layout

block head
  script
    $(document).bind("mobileinit", function(){
      //$.mobile.autoInitializePage = false;
      $.mobile.page.prototype.options.keepNative = "textarea, input[type=checkbox], input[type=radio], input[type=text], input[type=submit], input.search";
    });
  script(src='/assets/js/libs/jquery/jquery.mobile-1.2.0.js')
  //- script(src='/assets/js/libs/jquery.mobile.custom/jquery.mobile.custom.js')
block css
  link(rel='stylesheet', href='/assets/css/libs/steps.css')
  link(rel='stylesheet', href='/assets/css/libs/jquery.mobile-1.2.0.css')

block content

  section#header
    header#logo(role="banner") 
      img(src="/img/leaf-new-green.png", width="15%")

    div#setup.select-block
      h2.main-heading #{title}
      h3.sub-heading Selection
      //h3.sub-heading
    div#user.select-block
      h2.main-heading User
      h3.sub-heading
          if user.name.full != 'undefined undefined' && user.name.full != ''
           | #{user.name.full}
          else
           | #{user.email}

  section#main(role="main")
    div.content-module.middle
      form(id="growplans", class='steps', action='', method='post')                  
        
        section(id="system_selection", class="step", data-required="1")
          h4 What type of system do you have?
          ul(class="grid photos")
            each system, i in growSystems
              li
                input(id="sys_#{system.name}", type='radio', name="system.name", value="#{system.name}")
                label(for="sys_#{system.name}") #{system.name}

        section(id="plant_selection", class="step")
          h4 What would you like to grow?

          input(class="search no-validate")
          //span(class="sort", data-sort="plant") Sort by Plant Name

          ul(class="grid sortlist")
            each plant, i in plants
              li
                input(id="#{plant.name}", type='checkbox', name="plants", value="#{plant.name}")
                label(for="#{plant.name}", class="plant") #{plant.name}

        section(id="growplan_results", class="step update-panel hide", data-required="1")
          h4 We've found grow plans for you
          ul(class="grid sortlist photos")
            //dummy_systems = ["Drip","aquaponics","ebb & flow","Egg-carton seed starter","deep water culture (DWC)", "Bitponics Water Culture System"]
            each growPlan, i in growPlans
              li(id="gplist_#{growPlan.id}")
                input(id="gplist_input_#{growPlan.id}", type='radio', name="growplans", value="#{growPlan.id}")
                label(for="gplist_input_#{growPlan.id}") #{growPlan.name}
                  div.info
                    div(class="gplist_description") #{growPlan.description}
                    div(class="gplist_plants " + growPlan.plants.join(' ')) #{growPlan.plants}
                    ul(class="gplist_system")
                      each phase in growPlan.phases
                        li #{phase.growSystem.name}

          //Default grow plans not filtered
          ul(class="grid sortlist photos default")
            li(id="gplist_#{growPlanDefault.id}")
              input(id="gplist_input_#{growPlanDefault.id}", type='radio', name="growplans", value="#{growPlanDefault.id}")
              label(for="gplist_input_#{growPlanDefault.id}") #{growPlanDefault.name}
                div.info
                  div(class="gplist_description") #{growPlanDefault.description}
                  ul(class="gplist_system")
                      each phase in growPlanDefault.phases
                        li #{phase.growSystem.name}

        section(id="growplan_edit", class="step hide")
          h4 Tailor this grow plan to your needs

          //set as default grow plan, will change dynamically based on previous step selection
          input(id="gpedit__id", type="hidden", name="parentGrowPlan", value="#{growPlanDefault.id}") 

          label Name
          input(id="gpedit_name", type='text', name="gpedit_name", value="#{growPlanDefault.name}")
          
          label Description
          textarea(id="gpedit_description", name="gpedit_description") #{growPlanDefault.description}

          label Plants
          ul(class="grid plantlist")
            //textarea(id="gpedit_plants", type='text', name="gpedit_plants", value="#{growPlanDefault.plants}")
            each plant in growPlanDefault.plants
              li
                input(id="#{plant.name}", type='checkbox', name="plants", value="#{plant.name}")
                label(for="#{plant.name}", class="plant") #{plant.name}

          //- label Sensors
          //- input(id="gpedit_sensors", type='text', name="gpedit_sensors", value="#{growPlanDefault.sensors}")

          //- label Controls
          //- input(id="gpedit_controls", type='text', name="gpedit_controls", value="#{growPlanDefault.controls}")

          label Phases
          div.phaseRangeSlider
            div.phase-current-indicator
              span(for="phase_slider_current") I am on day  
              input(type="range", name="phase_slider_current", id="phase_slider_current", class="no-disable", value="0", min="0", max="182") 
              span of this grow plan.

            div.phase-sliders
              - var allPhases = ['Seedling', 'Vegetative', 'Blooming', 'Fruiting'];
              ul(class="phase-tabs")
                each phaseName, i in allPhases
                  li(class="#{phaseName.toLowerCase()}", data-phase="#{phaseName.toLowerCase()}") #{phaseName}
                    div.toggle
                      div(class="add icon")
                        | <i class="icon-glyph icon-plus" aria-hidden="true"></i>
                      div(class="remove icon")
                        | <i class="icon-glyph icon-x" aria-hidden="true"></i>
              each phaseName, i in allPhases
                div(class="phase-slider #{phaseName.toLowerCase()} inactive", data-phase="#{phaseName.toLowerCase()}")
                  div(class="phase-slider-info")
                    //- div.toggle
                    //-   div(class="add icon")
                    //-     | <i class="icon-glyph icon-plus" aria-hidden="true"></i>
                    //-   div(class="remove icon")
                    //-     | <i class="icon-glyph icon-x" aria-hidden="true"></i>
                    label(for="phase_slider_#{i}") #{phaseName}
                    span(class="date-range") date-x
                    span - 
                    span(class="date-duration") duration-x 
                  div(class="phase-slider-slider")
                    input(type="range", name="phase_slider_#{i}", id="phase_slider_#{i}", class="phase-slider-input", value="#{(i+1)/4 * 182}", min="0", max="182", data-phase="#{phaseName.toLowerCase()}")
                    span days

                  - var hasPhase = 0;
                  - var currentPhaseData = undefined;
                  each phase, i in growPlanDefault.phases
                    - if (phase.name == phaseName) {
                      - hasPhase++;
                      - currentPhaseData = phase;
                    - }

                  if (hasPhase > 0)
                    section
                      div.growSystem
                        label Grow System
                        input(id="gpedit_#{phaseName}_growsystem", type='text', name="gpedit_#{phaseName}_growsystem", value="#{currentPhaseData.growSystem._id}")

                      div.growMedium
                        label Grow Medium
                        input(id="gpedit_#{phaseName}_growmedium", type='text', name="gpedit_#{phaseName}_growmedium", value="#{currentPhaseData.growMedium}")
                      
                      div.nutrients
                        label Nutrients
                        ul.grid
                          each nutrient in currentPhaseData.nutrients
                            li
                              input(id="gpedit_#{phaseName}_nutrients", type='checkbox', name="gpedit_#{phaseName}_nutrients", value="#{nutrient.id}", checked=true)
                              label(for="gpedit_#{phaseName}_nutrients") #{nutrient.name} - #{nutrient.brand}

                      div.actions
                        label Actions
                        ul.grid
                          each action, i in currentPhaseData.actions
                            li
                              input(id="gpedit_#{phaseName}_action_#{i}", type="checkbox", name="gpedit_#{phaseName}_actions", value="#{action.id}", checked=true)
                              label(for="gpedit_#{phaseName}_action_#{i}") #{action.description}
                          //- each phaseEndActions in currentPhaseData.actions
                          //-   li
                          //-     //TODO: this is hack w/ i*99
                          //-     input(id="gpedit_#{i*99}_#{phaseName}_action", type="checkbox", name="gpedit_#{i}_#{phaseName}_action", value="#{phaseEndActions.id}, checked=true")
                          //-     label(for="gpedit_#{i*99}_#{phaseName}_action") #{phaseEndActions.description}

                      div.idealRanges
                        label Ideal Ranges
                        ul.grid
                          each idealRange, i in currentPhaseData.idealRanges
                            li
                              input(id="gpedit_#{phaseName}_idealrange_#{i}", type="checkbox", name="gpedit_#{phaseName}_idealranges", value="#{idealRange.id}", checked=true)
                              label(for="gpedit_#{phaseName}_idealrange_#{i}") #{idealRange.sCode}
                      
                      div.phaseEndDescription
                        label Phase End Description
                        textarea(id="gpedit_#{phaseName}_enddescription", name="gpedit_#{phaseName}_enddescription", placeholder="Write a phase end description...") #{currentPhaseData.phaseEndDescription}
                    
                  else 
                      //this grow plan doesnt have this data, but populate the html anyway for possible customization
                    section
                      div.growMedium
                        label Grow Medium
                        input(id="gpedit_#{phaseName}_growmedium", type='text', name="gpedit_#{phaseName}_growmedium", value="")
                      
                      div.nutrients
                        label Nutrients
                        ul.grid
                            label Add +
                            input(id="gpedit_#{phaseName}_nutrients", type='text', name="gpedit_#{phaseName}_nutrients", value="")
                            

                      div.actions
                        label Actions
                        ul.grid
                            li
                              input(type="checkbox", name="gpedit_#{phaseName}_actions", value="")
                              label Add +

                      div.idealRanges
                        label Ideal Ranges
                        ul.grid
                            li
                              input(type="checkbox", name="gpedit_#{phaseName}_idealranges", value="")
                              label Add +
                      
                      div.phaseEndDescription
                        label Phase End Description
                        textarea(id="gpedit_#{phaseName}_enddescription", name="gpedit_#{phaseName}_enddescription", placeholder="Write a phase end description...")
                  
                  //span Days (Default: #{(i+1)/4 * 182} )
          



                //- each phase, i in growPlanDefault.phases
                //-   div(class="phase-slider #{phase.name.toLowerCase()}")
                //-     - var sliderValue = phase.expectedNumberOfDays ? phase.expectedNumberOfDays : 100
                //-     label(for="first_phase_slider") #{phase.name}
                //-     input(type="range", name="phase_slider_#{i}", id="phase_slider_#{i}", class="no-disable", value="#{sliderValue}", min="0", max="100", data-phase="#{phase.name}")
                //-     span Days (Default: #{phase.expectedNumberOfDays ? phase.expectedNumberOfDays : 'indeterminate'} ) 

          if (userOwnedDevices.length > 0)
            label Device
            ul(class="grid devicelist")
              each device in userOwnedDevices
                li
                  input(id="device_#{device._id}", type='radio', name="device", value="#{device._id}")
                  label(for="device_#{device._id}", class="device") #{device.name}

        input(id="growplans_activate", type="submit", value="Activate Grow Plan")

block footer-scripts

  script
    Bitponics.user = {
      
    }
    Bitponics.growPlans = !{JSON.stringify(growPlans)};
    Bitponics.growPlanDefault = !{JSON.stringify(growPlanDefault)};
  
  script(src='/assets/js/libs/Steps.js')
  script(src='/assets/js/libs/list/src/list.js')
  script(src='/assets/js/libs/list/plugins/fuzzy/list.fuzzySearch.js')
  //- script(src='/assets/js/libs/list/list.min.js')
  script(src='/assets/js/growplans.js')
