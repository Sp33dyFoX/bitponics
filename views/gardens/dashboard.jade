extends ../layout

block head
  mixin requirejs("/assets/js/pages/dashboard")

block css

block content
  section.header
      header
        include ../includes/nav/main
        
  section#main(role="main", class="main")
    img.page-spinner.spinner(src="/assets/img/spinner.svg", ng-hide="true")
    div(ng-cloak, ng-controller="bpn.controllers.dashboard.Main")
      h2.page-heading {{sharedDataService.growPlanInstance.name}}

      div#sensors.sensors.content-module.side.separator-top(ng-controller="bpn.controllers.dashboard.DayOverview")

        h2.page-heading-small.date 
          | {{sharedDataService.activeDate.date | date:'longDate'}}
          img.spinner(src="/assets/img/spinner.svg", ng-hide="sharedDataService.activeDate.loaded", ng-animate="{show: 'fade-in', hide:'fade-out'}")
          //-div.time.page-heading-small(ng-show="sharedDataService.activeDate.showTime") {{sharedDataService.activeDate.date | date:'mediumTime'}}
          
        div.data-module.phase-info
          div.phase-name {{sharedDataService.activeDate.growPlanPhase.name}} Phase
          div.phase-day Day {{sharedDataService.activeDate.dayOfPhase}}
        div(ng-repeat="sensor in sharedDataService.sensors", ng-class="getSensorBlockClassNames(sensor, sharedDataService.activeDate.latestSensorLogs)", ng-click="sharedDataService.activeOverlay = 'SensorOverlay'+sensor.abbrev")
          h3.main-heading
            | {{sensor.abbrev}}
          div.sensor-data
            div.sensor-value(ng-show="sharedDataService.activeDate.latestSensorLogs[sensor.code]") {{sharedDataService.activeDate.latestSensorLogs[sensor.code]}}
            div.sensor-value(ng-hide="sharedDataService.activeDate.latestSensorLogs[sensor.code]") ----
          div(class="sensor-type icon {{sensor.code}}")
            | <i class="icon-glyph icon-glyph-new icon-{{sensor.code}}" aria-hidden="true"></i>
            div.sensor.screen-reader-text {{sensor.code}}
          //- div.message #{warning ? 'Check' : 'OK'}
          //- div(class="settings icon")
          //-   | <i class="icon-glyph icon-glyphbitponics_settings_icon" aria-hidden="true"></i>
          //-   div.screen-reader-text Settings

          div
            div(modal="sharedDataService.activeOverlay=='SensorOverlay'+sensor.abbrev", close="close()", options="sharedDataService.modalOptions")
              div(ng-controller="bpn.controllers.SelectionOverlay", class="overlay-contain")
                div(class="close btn", ng-click="close()")
                  | <i class="icon-glyph-new icon-28_x" aria-hidden="true"></i>
                h3(class="page-heading page-heading-small") {{sensor.name}}
                div(ng-controller="bpn.controllers.dashboard.SensorDetailOverlay")
                  div(class="overlay-data clearfix")
                    div.left
                      h4 Last Reading ({{sensor.unit}})
                      div.separator-top(ng-show="{{sharedDataService.activeDate.latestSensorLogs[sensor.code]}}") {{sharedDataService.activeDate.latestSensorLogs[sensor.code]}}
                      div.separator-top(ng-hide="{{sharedDataService.activeDate.latestSensorLogs[sensor.code]}}") ----
                      h5.reading-time {{sharedDataService.activeDate.latestSensorLogs.timestamp | date:'short' }}
                    div.right(ng-show="idealRanges[sensor.code]")
                      h4 Ideal Range ({{sensor.unit}})
                      div.separator-top() {{idealRanges[sensor.code].valueRange.min}} - {{idealRanges[sensor.code].valueRange.max}}

                  div(data-bpn-directives-sensor-sparkline-graph, data-sensor-code="sensor.code", data-sensor-logs="sharedDataService.activeDate.sensorLogs")
                  - if (userCanModify === true)
                    div(ng-show="sensor.code == 'ph' || sensor.code == 'ec'")
                      a(class="btn flush-left", ng-href="/account/devices/{{sharedDataService.growPlanInstance.device._id}}/calibrate") Calibrate
                

      div.content-module.middle.separator-top
        div(ng-controller="bpn.controllers.dashboard.PhasesGraph")
          div(data-bpn-directives-phases-graph)

        div(class="full-width", ng-controller="bpn.controllers.dashboard.PhotoLogs")
          //- ordered from new to old
          
          ul(class="grid photos centered", ng-show="sharedDataService.photos.length > 0") 
            li.photo(ng-repeat="photo in sharedDataService.photos", ng-click="open(photo._id)")
              img(ng-src="{{photo.url}}")
              div
                div(modal="sharedDataService.activeOverlay==('PhotoLogsOverlay-' + photo._id)", close="close()", options="modalOptions")
                  div(class="overlay-contain")
                    div(class="close btn", ng-click="close()")
                      | <i class="icon-glyph-new icon-28_x" aria-hidden="true"></i>
                    h3(class="page-heading page-heading-small") {{photo.date | date:medium}}
                    div.content-module.centered
                      img(ng-src="{{photo.url}}")
    
      div.content-module.side.separator-top
        div#controls.controls(ng-controller="bpn.controllers.dashboard.Controls")
          h2.page-heading-small Accessories
          div(ng-repeat="controlAction in sharedDataService.growPlanInstance.device.status.activeActions", class="control {{controlAction.control.className} icon-glyph icon-{{controlAction.control.className}", data-control-key="{{controlAction.control.name}}") 
            h3 {{controlAction.control.name}}
            div(data-bpn-directives-control-action-graph, data-control-action="controlAction", custom-click="sharedDataService.activeOverlay = 'ControlOverlay'+controlAction.control.name")
            div
              div(ng-controller="bpn.controllers.dashboardApp.ControlOverlay", modal="sharedDataService.activeOverlay=='ControlOverlay'+controlAction.control.name", close="close()", options="sharedDataService.modalOptions")
                div(ng-controller="bpn.controllers.SelectionOverlay", class="overlay-contain")
                  div(class="close btn", ng-click="close()")
                    | <i class="icon-glyph-new icon-28_x" aria-hidden="true"></i>
                  h3(class="page-heading page-heading-small") {{controlAction.control.name}}
                  div(class="overlay-data", ng-show="controlAction.baseCycle.states.length > 1")
                    div.left
                      h4 {{controlAction.baseCycle.states[0].controlValue | controlValueToWord}} cycle ({{controlAction.baseCycle.states[0].durationType}})
                      div.separator-top {{controlAction.baseCycle.states[0].duration}}
                    div.right
                      h4 {{controlAction.baseCycle.states[1].controlValue | controlValueToWord}} cycle ({{controlAction.baseCycle.states[1].durationType}})
                      div.separator-top {{controlAction.baseCycle.states[1].duration}}
                  div(class="overlay-data", ng-show="controlAction.cycle.states.length <= 1 && controlAction.baseCycle.states.length <= 1")
                    h4 This control does not cycle.
                  div(class="overlay-data", ng-show="controlAction.cycle.states.length <= 1 && controlAction.baseCycle.states.length > 1")
                    h4 This cycle has been overridden.
                  p.clear-b
                    {{controlAction.control.name}} is currently {{sharedDataService.growPlanInstance.device.outputMapByControlId[controlAction.control._id].currentState | controlValueToWord:true }}.
                  - if (userCanModify === true)
                    div.separator-top
                      a.btn.turn-on.flush-left(ng-show="controlAction.control.onAction", ng-click="triggerImmediateAction(controlAction, controlAction.control.onAction._id)") Turn on
                      a.btn.turn-off.flush-left(ng-show="controlAction.control.offAction", ng-click="triggerImmediateAction(controlAction, controlAction.control.offAction._id)") Turn off
                      a.btn.resume-cycle.flush-left(ng-show="controlAction.cycle.states.length <= 1 && controlAction.baseCycle.states.length > 1", ng-click="clearImmediateAction(controlAction, controlAction.control)") Resume cycle
                      img.spinner(src="/assets/img/spinner.svg", ng-show="controlAction.updateInProgress", ng-animate="{show: 'fade-in', hide:'fade-out'}")

        div#notifications.notifications.separator-top(ng-controller="bpn.controllers.dashboard.Notifications")
          h2.page-heading-small Notifications
          div(ng-repeat="notification in pastNotifications", class="past")
            //- input(type="checkbox", model="notification._id", id="notification._id")
            label(for="notification._id")
              div.date {{notification.timeToSend | friendlyDate }}
              div.title {{notification.displays.summary}}
          

  svg(height='0')
    mask#svg-active-mask(maskunits='objectBoundingBox', maskcontentunits='objectBoundingBox')
      lineargradient#svg-active-gradient(gradientunits='objectBoundingBox', x2='0', y2='1')
        stop(stop-color='white', offset='0%')
        stop(stop-color='white', offset='10%')
        stop(stop-color='white', stop-opacity='0', offset='11%')
        stop(stop-color='white', stop-opacity='0', offset='20%')
        stop(stop-color='white', offset='21%')
        stop(stop-color='white', offset='30%')
        stop(stop-color='white', stop-opacity='0', offset='31%')
        stop(stop-color='white', stop-opacity='0', offset='40%')
        stop(stop-color='white', offset='41%')
        stop(stop-color='white', offset='50%')
        stop(stop-color='white', stop-opacity='0', offset='51%')
        stop(stop-color='white', stop-opacity='0', offset='60%')
        stop(stop-color='white', offset='61%')
        stop(stop-color='white', offset='70%')
        stop(stop-color='white', stop-opacity='0', offset='71%')
        stop(stop-color='white', stop-opacity='0', offset='80%')
        stop(stop-color='white', offset='81%')
        stop(stop-color='white', offset='90%')
        stop(stop-color='white', stop-opacity='0', offset='91%')
        stop(stop-color='white', stop-opacity='0', offset='100%')
      rect(width='1', height='1', fill='url(#svg-active-gradient)')

  

block footer-scripts
  script
    // GPI is a GPI with a fully-populated GP for "growPlan" property
    bpn.pageData.growPlanInstance = !{JSON.stringify(growPlanInstance)};
    bpn.pageData.sensors = !{JSON.stringify(sensors)};
    bpn.pageData.controls = !{JSON.stringify(controls)};
    bpn.pageData.notifications = !{JSON.stringify(notifications)};
    bpn.pageData.photos = !{JSON.stringify(photos)};
